* My personal Emacs configuration
  My Spacemacs configuration is based on [[https://github.com/zilongshanren/spacemacs-private][zilongshanren]].

** Installation
*** Install Emacs-mac on Mac

    #+BEGIN_SRC shell
    brew tap railwaycat/emacsmacport
    brew cask install emacs-mac
    #+END_SRC

    Or download the releases(with different icons) from [[https://github.com/railwaycat/homebrew-emacsmacport/releases][here]]. You can also change the icons located in the /icons/ folder.

*** Install Emacs on Linux
    #+BEGIN_SRC shell
    # Ubuntu
    sudo apt-get insatll emacs
    # Arch
    sudo pacman -S emacs
    #+END_SRC

*** Install Spacemacs
    #+BEGIN_SRC shell
    rm -r ~/.emacs.d
    git clone https://github.com/syl20bnr/spacemacs -b develop ~/.emacs.d
    #+END_SRC

*** My configuration
    1. Clone my configuration:
       #+BEGIN_SRC shell
       git clone https://github.com/ztlevi/Spacemacs-config.git ~/.spacemacs.d
       #+END_SRC
    2. Install Ubuntu Mono font
    3. Install ispell, npm tern, the_silver_searcher

** What's the highlight of this configuration
   1. It's a highly customize optimized Spacemacs configuration, it's relied on the develop branch of the officially Spacemacs.
   2. I prefer to the =Ivy= completion interface, so I removed many helm related packages but keep the =helm-ag= package. The =counsel-ag= counterpart is not powerful as =helm-ag=.
   3. I also removed some packages I don't have any chance to use. The complete lists are in the exclude section of the =init.el= file.
   4. I also exclude the =Spaceline= package, cause it's easy to frozen the Emacs with this package enabled. So I create my own mode line configuration based =Spaceline=.
   5. The =Swiper= package sometimes frozen the Emacs UI only when you split the window. You could use `pkill -SIGUSR2 -i emacs` command line to rescue.

** Happing Hacking
   1. The live server "simple-httpd" port is set to be 48080 in the custom.el. So the testing page for this live server is http://localhost:48080/imp .

   2. Ctags setting is under *my-setup-develop-environment()* function. Add scripts like this to automatically generate TAGS for your project. You may need to install ctags if you never used before.
      #+BEGIN_SRC lisp
      ((my-project-name-contains-substring "Sites/TRIdemo")
        (message "load tags for TRIdemo...")
        (setq tags-table-list
        (list (my-create-tags-if-needed "/Users/ztlevi/Sites/TRIdemo/app"))))
      #+END_SRC
        
      Or ~cd /path/to/my/project~, ~ctags -e -R .~ and manually use *select-tag-table* function to select TAGS(set the tags-table-list value).

   3. If you want to use Wordpress org2blog, something needs to be changed in the *init-org2blog()* function.
      
      Also create a /.netrc/ file in the home directory. and put your personal info in the file.
      #+BEGIN_SRC shell
      machine {Credential name} login {username} password {your-password}
      #+END_SRC
      Note: my credential name here is wp-ztlevi

