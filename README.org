* My personal Emacs configuration
  My Spacemacs configuration is based on [[https://github.com/zilongshanren/spacemacs-private][zilongshanren]].

** Installation
*** Install Emacs-mac on Mac

    - *Method 1*: Use brew cask(Recommended)
      #+BEGIN_SRC shell
        brew tap railwaycat/emacsmacport
        brew cask install emacs-mac-spacemacs-icon
      #+END_SRC

    - *Method 2*: Just brew, need compiling. (more customization)
      #+BEGIN_SRC shell
        brew tap railwaycat/emacsmacport
        brew install emacs-mac --with-spacemacs-icon --with-gnutls --with-natural-title-bar
        # create alias in /Applications
        rm /Applications/Emacs
        brew linkapps emacs-mac
      #+END_SRC

      #+BEGIN_QUOTE
      Notes: (just for method 2)
      1. natural-title-bar usage [[https://github.com/railwaycat/homebrew-emacsmacport/wiki/Natural-Title-Bar][here]].
      2. Solution to incoming network connection:
         Codesign your Emacs.app. Instructions over [[http://apple.stackexchange.com/questions/3271/how-to-get-rid-of-firewall-accept-incoming-connections-dialog/170566][here]].
         ~codesign --deep --force --verbose --sign ztlevi /usr/local/opt/emacs-mac/Emacs.app~
      #+END_QUOTE
*** Install Emacs on Linux
    #+BEGIN_SRC shell
      # Ubuntu
      sudo apt-get insatll emacs
      # Arch
      sudo pacman -S emacs
    #+END_SRC

*** Install Spacemacs
    #+BEGIN_SRC shell
      rm -r ~/.emacs.d
      git clone https://github.com/syl20bnr/spacemacs -b develop ~/.emacs.d
    #+END_SRC

*** Configuration and Dependencies
    This Emacs configuration is written for Emacs 25.1+ on Mac OS X 10.11+ and Linux Arch. Windows users may need to tweak the config for themselves.

    1. Clone my configuration:
       #+BEGIN_SRC shell
         git clone https://github.com/ztlevi/spacemacs-config.git ~/.spacemacs.d
       #+END_SRC
    2. Install all-the-icons fonts by ~M-x all-the-icons-install-fonts~. I'm using /Operator Mono Lig/ font(supports ligatures), you could change it under ~dotspacemacs-default-font~.
    3. Download and install DejaVu Sans Mono from [[https://sourceforge.net/projects/dejavu/files/dejavu/2.35/dejavu-fonts-ttf-2.35.tar.bz2/download][here]]. It's the best programming font supports unicode.
    4. Dependencies needed
       - Install shellcheck, ispell, ripgrep, the_silver_searcher, the_platinum_searcher
         #+BEGIN_SRC shell
           brew install shellcheck coreutils ispell grep ripgrep the_silver_searcher pt
         #+END_SRC
       - npm
         #+BEGIN_SRC shell
           npm install -g prettier eslint babel-eslint eslint-plugin-react eslint-plugin-html tern typescript tslint typescript-formatter
         #+END_SRC
       - pip
         #+BEGIN_SRC shell
           pip3 install yapf
         #+END_SRC

** Usage
   1. If you want to map *jk* as evil escape key, add the following line in ~customize.el~ -> ~custom-set-variables~ and delete ~evil-escape~ package in ~init.el~ -> ~dotspacemacs-excluded-packages~.

      #+BEGIN_SRC emacs lisp
      '(evil-escape-delay 0.2)
      '(evil-escape-key-sequence "jk")
      #+END_SRC

   2. The live server "simple-httpd" port is set to be 48080 in the custom.el. So the testing page for this live server is http://localhost:48080/. Start the live server with ~httpd-serve-directory~.

   3. Ctags setting is under *my-setup-develop-environment()* function. Add scripts like this to automatically generate TAGS for your project. You may need to install ctags if you never used before.
      #+BEGIN_SRC lisp
        ((my-project-name-contains-substring "Sites/TRIdemo")
         (message "load tags for TRIdemo...")
         (setq tags-table-list
               (list (my-create-tags-if-needed "/Users/ztlevi/Sites/TRIdemo/app"))))
      #+END_SRC

      Or ~cd /path/to/my/project~, ~ctags -e -R .~ and manually use *select-tag-table* function to select TAGS(set the tags-table-list value).

   4. Atomic Chrome is very useful to edit the textarea in Chrome. You will need to install the Chrome extension [[https://chrome.google.com/webstore/detail/atomic-chrome/lhaoghhllmiaaagaffababmkdllgfcmc][here]].

   5. Prodigy is great to define your own services and fire up the service easily. Custom setting is under function *ztlevi-misc/post-init-prodigy*

      Note: If you are on a Mac, disable nap mode for Emacs, otherwise requests will be very slow when Emacs enters nap mode:
      #+BEGIN_SRC shell
        defaults write org.gnu.Emacs NSAppSleepDisabled -bool YES
      #+END_SRC

   6. To change the home page banner, configure the setting in ~dotspacemacs-startup-banner '"~/.spacemacs.d/icons/banner.png"~.

** What's the highlight of this configuration
   1. It's a highly customize optimized Spacemacs configuration, it's relied on the *develop* branch of the officially Spacemacs.
   2. I prefer to the =Ivy= completion interface, so I removed many helm related packages but keep the =helm-ag= package. The =counsel-ag= counterpart is not powerful as =helm-ag=.
   3. I also removed some packages I don't have any chance to use. The complete lists are in the exclude section of the =init.el= file.
   4. I also exclude the =Spaceline= package, cause it's easy to frozen the Emacs with this package enabled. So I create my own mode line configuration based =Spaceline=.
   5. The =Swiper= package sometimes frozen the Emacs UI only when you split the window. You could use `pkill -SIGUSR2 -i emacs` command line to rescue.
